# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: asset.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='asset.proto',
  package='asset',
  syntax='proto3',
  serialized_pb=_b('\n\x0b\x61sset.proto\x12\x05\x61sset\"n\n\x03Tag\x12\r\n\x05value\x18\x01 \x01(\t\x12!\n\x06origin\x18\x02 \x01(\x0e\x32\x11.asset.Tag.Origin\"5\n\x06Origin\x12\x0b\n\x07SCRAPED\x10\x00\x12\n\n\x06VISION\x10\x01\x12\x06\n\x02\x41I\x10\x02\x12\n\n\x06MANUAL\x10\x03\"A\n\x0f\x41rchiveMetadata\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tkilobytes\x18\x02 \x01(\x03\x12\r\n\x05\x66iles\x18\x03 \x03(\t\"\xad\x01\n\x05\x41sset\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04uuid\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x10\n\x08\x66ilename\x18\x05 \x01(\t\x12\x12\n\nbanner_uri\x18\x06 \x01(\t\x12\x18\n\x04tags\x18\x07 \x03(\x0b\x32\n.asset.Tag\x12\'\n\x07\x61rchive\x18\x08 \x01(\x0b\x32\x16.asset.ArchiveMetadatab\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_TAG_ORIGIN = _descriptor.EnumDescriptor(
  name='Origin',
  full_name='asset.Tag.Origin',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SCRAPED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VISION', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AI', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MANUAL', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=79,
  serialized_end=132,
)
_sym_db.RegisterEnumDescriptor(_TAG_ORIGIN)


_TAG = _descriptor.Descriptor(
  name='Tag',
  full_name='asset.Tag',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='asset.Tag.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='origin', full_name='asset.Tag.origin', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TAG_ORIGIN,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=132,
)


_ARCHIVEMETADATA = _descriptor.Descriptor(
  name='ArchiveMetadata',
  full_name='asset.ArchiveMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='asset.ArchiveMetadata.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kilobytes', full_name='asset.ArchiveMetadata.kilobytes', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='files', full_name='asset.ArchiveMetadata.files', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=134,
  serialized_end=199,
)


_ASSET = _descriptor.Descriptor(
  name='Asset',
  full_name='asset.Asset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='asset.Asset.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uuid', full_name='asset.Asset.uuid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='asset.Asset.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='asset.Asset.description', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filename', full_name='asset.Asset.filename', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='banner_uri', full_name='asset.Asset.banner_uri', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tags', full_name='asset.Asset.tags', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='archive', full_name='asset.Asset.archive', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=202,
  serialized_end=375,
)

_TAG.fields_by_name['origin'].enum_type = _TAG_ORIGIN
_TAG_ORIGIN.containing_type = _TAG
_ASSET.fields_by_name['tags'].message_type = _TAG
_ASSET.fields_by_name['archive'].message_type = _ARCHIVEMETADATA
DESCRIPTOR.message_types_by_name['Tag'] = _TAG
DESCRIPTOR.message_types_by_name['ArchiveMetadata'] = _ARCHIVEMETADATA
DESCRIPTOR.message_types_by_name['Asset'] = _ASSET

Tag = _reflection.GeneratedProtocolMessageType('Tag', (_message.Message,), dict(
  DESCRIPTOR = _TAG,
  __module__ = 'asset_pb2'
  # @@protoc_insertion_point(class_scope:asset.Tag)
  ))
_sym_db.RegisterMessage(Tag)

ArchiveMetadata = _reflection.GeneratedProtocolMessageType('ArchiveMetadata', (_message.Message,), dict(
  DESCRIPTOR = _ARCHIVEMETADATA,
  __module__ = 'asset_pb2'
  # @@protoc_insertion_point(class_scope:asset.ArchiveMetadata)
  ))
_sym_db.RegisterMessage(ArchiveMetadata)

Asset = _reflection.GeneratedProtocolMessageType('Asset', (_message.Message,), dict(
  DESCRIPTOR = _ASSET,
  __module__ = 'asset_pb2'
  # @@protoc_insertion_point(class_scope:asset.Asset)
  ))
_sym_db.RegisterMessage(Asset)


# @@protoc_insertion_point(module_scope)
